-- MySQL Script generated by MySQL Workbench
-- Sun May 27 19:31:28 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema request
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `request` ;

-- -----------------------------------------------------
-- Schema request
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `request` DEFAULT CHARACTER SET utf8 ;
USE `request` ;

-- -----------------------------------------------------
-- Table `request`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `request`.`role` ;

CREATE TABLE IF NOT EXISTS `request`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `request`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `request`.`user` ;

CREATE TABLE IF NOT EXISTS `request`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `role_id` INT NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `role_fk_idx` (`role_id` ASC),
  CONSTRAINT `role_fk`
    FOREIGN KEY (`role_id`)
    REFERENCES `request`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `request`.`request_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `request`.`request_status` ;

CREATE TABLE IF NOT EXISTS `request`.`request_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `request`.`request`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `request`.`request` ;

CREATE TABLE IF NOT EXISTS `request`.`request` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `request_status_id` INT NOT NULL,
  `client_type` TINYINT NOT NULL,
  `amount` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `status_idx` (`request_status_id` ASC),
  CONSTRAINT `status`
    FOREIGN KEY (`request_status_id`)
    REFERENCES `request`.`request_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `request`.`attachment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `request`.`attachment` ;

CREATE TABLE IF NOT EXISTS `request`.`attachment` (
  `request_id` INT NOT NULL,
  `path` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`request_id`, `path`),
  CONSTRAINT `request`
    FOREIGN KEY (`request_id`)
    REFERENCES `request`.`request` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `request`.`role`
-- -----------------------------------------------------
START TRANSACTION;
USE `request`;
INSERT INTO `request`.`role` (`id`, `name`) VALUES (1, 'Clerk');
INSERT INTO `request`.`role` (`id`, `name`) VALUES (2, 'Referer');
INSERT INTO `request`.`role` (`id`, `name`) VALUES (3, 'HR');
INSERT INTO `request`.`role` (`id`, `name`) VALUES (4, 'Servant');

COMMIT;


-- -----------------------------------------------------
-- Data for table `request`.`user`
-- -----------------------------------------------------
START TRANSACTION;
USE `request`;
INSERT INTO `request`.`user` (`id`, `name`, `role_id`, `password`) VALUES (1, 'Clerk', 1, '000');
INSERT INTO `request`.`user` (`id`, `name`, `role_id`, `password`) VALUES (2, 'Referer', 2, '000');
INSERT INTO `request`.`user` (`id`, `name`, `role_id`, `password`) VALUES (3, 'HR', 3, '000');
INSERT INTO `request`.`user` (`id`, `name`, `role_id`, `password`) VALUES (4, 'Servant', 4, '000');

COMMIT;


-- -----------------------------------------------------
-- Data for table `request`.`request_status`
-- -----------------------------------------------------
START TRANSACTION;
USE `request`;
INSERT INTO `request`.`request_status` (`id`, `name`) VALUES (1, 'Created');
INSERT INTO `request`.`request_status` (`id`, `name`) VALUES (2, 'Analyzed');
INSERT INTO `request`.`request_status` (`id`, `name`) VALUES (3, 'Staffed');
INSERT INTO `request`.`request_status` (`id`, `name`) VALUES (4, 'Confirmed');

COMMIT;


-- -----------------------------------------------------
-- Data for table `request`.`request`
-- -----------------------------------------------------
START TRANSACTION;
USE `request`;
INSERT INTO `request`.`request` (`id`, `name`, `request_status_id`, `client_type`, `amount`) VALUES (1, 'Иванов И.И.', 1, 0, 150000);
INSERT INTO `request`.`request` (`id`, `name`, `request_status_id`, `client_type`, `amount`) VALUES (2, 'Петров А.П.', 1, 0, 109990);
INSERT INTO `request`.`request` (`id`, `name`, `request_status_id`, `client_type`, `amount`) VALUES (3, 'ОАО \"Компания\"', 3, 1, 100000);

COMMIT;

